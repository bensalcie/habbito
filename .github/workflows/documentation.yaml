name: Generate Documentation

# Triggers the workflow on pull request events but only for the main branch
# Build is triggered with successful push of a new Tag (No need to initiate the build manually via github)
on:
  pull_request:
    types:
      - opened
    branches:
      - main

jobs:
  generate_documentation:
    runs-on: ubuntu-latest
    steps:
      # Setup the flutter environment.
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'
          flutter-version: '3.7.7'
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Install dependencies.
        run: flutter pub get

      - name: Generate documentation.
        run: dart doc .

      - name: Archive documentation
        uses: actions/upload-artifact@v3
        with:
          name: pleier_docs
          path: doc/api

      - name: Check out pull request branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Download documentation
        uses: actions/download-artifact@v3
        id: download
        with:
          name: pleier_docs
          path: doc/api

      - name: Display structure of downloaded files
        run: ls -R

      - name: Commit and push documentation
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add -f doc/api
          git commit -m "Add generated documentation"
          git push
